{"version":3,"sources":["req-char-validator.js"],"names":["RequiredCharValidator","domElement","charactersToCheck","console","log","$field","errors","secret","value","found","forEach","character","indexOf","push","InputValidator"],"mappings":";;;;;;;;;;;;;;;;;;IAAMA,qB;;;;;AAEF;AACA,iCAAYC,UAAZ,EAAwBC,iBAAxB,EAA0C;AAAA;;AAAA;;AAEtC;AACA,+FAAMD,UAAN,GAHsC,CAItC;;AAJsC,+DAU/B,YAAM;AACbE,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8C,MAAKC,MAAnD;AAEA,YAAKC,MAAL,GAAa,EAAb;AAEA,UAAIC,MAAM,GAAG,MAAKF,MAAL,CAAYG,KAAzB,CALa,CAOb;;AACA,UAAIC,KAAK,GAAG,KAAZ,CARa,CAUb;;AACA,YAAKP,iBAAL,CAAuBQ,OAAvB,CAA+B,UAAAC,SAAS,EAAI;AACxC;AACA,YAAIJ,MAAM,CAACK,OAAP,CAAeD,SAAf,IAA2B,CAAC,CAAhC,EAAkC;AAC/BR,UAAAA,OAAO,CAACC,GAAR,CAAY,qBAAqBG,MAAjC;AACAE,UAAAA,KAAK,GAAG,IAAR,CAF+B,CAG/B;AACH,SAJA,MAIK;AACD;AACDN,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACF;AAEJ,OAXD;;AAaA,UAAGK,KAAK,IAAI,KAAZ,EAAkB;AACd;AACA,cAAKH,MAAL,CAAYO,IAAZ,CAAiB,4CAAjB;AACJ;AAEH,KAvCyC;;AAKtC,UAAKX,iBAAL,GAAyBA,iBAAzB;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCH,UAAvC,EAAmDC,iBAAnD;AAPsC;AAQzC;;;EAX+BY,c","sourcesContent":["class RequiredCharValidator extends InputValidator{\n\n    //in this constructor we have a second parameter (allowed to exist because inputVaidator has a 2nd optional parameter called options)\n    constructor(domElement, charactersToCheck){\n        \n        //super \"call\" the domElement constructor that is in InputValidator [constructor(domElement)]\n        super(domElement)\n        //remember *this* variable\n        this.charactersToCheck = charactersToCheck\n\n        console.log('RequiredCharValidator()', domElement, charactersToCheck)\n    }\n\n    validate = () => {\n        console.log('RequiredCharValidator.validate', this.$field);\n        \n        this.errors= [];\n\n        let secret = this.$field.value;\n        \n        //default setting so error message will apply automatically\n        let found = false;\n\n        //characterstoCheck is in an array so for each character in that array, do this:\n        this.charactersToCheck.forEach(character => {\n            //if secret contains a character in its index\n            if (secret.indexOf(character)> -1){\n               console.log(\"secret is true: \" + secret)\n               found = true;\n               //switch found to true to the next if statement no longer applies. \n           } else{\n                //if it does not find a value\n               console.log('invalid')\n            }\n            \n        });\n        \n        if(found == false){\n            //add this message to the this.errors array (see InpuValidator)\n            this.errors.push('One or more special character is required.' ); \n       }\n\n    }\n}\n\n\n"],"file":"req-char-validator.js"}