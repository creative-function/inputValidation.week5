{"version":3,"sources":["req-num-validator.js"],"names":["RequiredNumberValidator","domElement","numbersToCheck","console","log","$field","errors","ageInput","value","first","last","length","found","push","InputValidator"],"mappings":";;;;;;;;;;;;;;;;;;IAAMA,uB;;;;;AAEF;AACA,mCAAYC,UAAZ,EAAwBC,cAAxB,EAAuC;AAAA;;AAAA;;AAEnC;AACA,iGAAMD,UAAN,GAHmC,CAInC;;AAJmC,+DAU5B,YAAM;AACbE,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgD,MAAKC,MAArD;AAEA,YAAKC,MAAL,GAAa,EAAb;AAEA,UAAIC,QAAQ,GAAG,MAAKF,MAAL,CAAYG,KAA3B;AAGA,UAAIC,KAAK,GAAG,MAAKP,cAAL,CAAoB,CAApB,CAAZ,CARa,CAQuB;;AAEpC,UAAIQ,IAAI,GAAG,MAAKR,cAAL,CAAoB,MAAKA,cAAL,CAAoBS,MAApB,GAA6B,CAAjD,CAAX,CAVa,CAUmD;;AAEhER,MAAAA,OAAO,CAACC,GAAR,CAAa,eAAeK,KAA5B;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAeG,QAA3B;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAa,cAAcM,IAA3B,EAda,CAgBb;;AACA,UAAIE,KAAK,GAAG,KAAZ;;AAGD,UAAGL,QAAQ,GAAGG,IAAd,EAAmB;AAClBP,QAAAA,OAAO,CAACC,GAAR,CAAYG,QAAQ,GAAG,4BAAX,GAA0CE,KAA1C,GAAkD,OAAlD,GAA4DC,IAAxE;AACC,OAFF,MAEQ,IAAGD,KAAK,GAAGF,QAAX,EAAoB;AACvBJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,QAAQ,GAAG,8BAAX,GAA4CE,KAA5C,GAAoD,OAApD,GAA8DC,IAA1E;AACH,OAFM,MAEF;AACFE,QAAAA,KAAK,GAAG,IAAR;;AACA,cAAKN,MAAL,CAAYO,IAAZ,CAAiB,gBAAjB;;AACAV,QAAAA,OAAO,CAACC,GAAR,CAAYG,QAAQ,GAAG,cAAX,GAA4BE,KAA5B,GAAoC,OAApC,GAA8CC,IAA1D;AACH;;AAEA,UAAGE,KAAK,IAAI,KAAZ,EAAkB;AACd;AACA,cAAKN,MAAL,CAAYO,IAAZ,CAAiB,0BAAjB;AACJ;AAEH,KA7CsC;;AAKnC,UAAKX,cAAL,GAAsBA,cAAtB;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCH,UAAzC,EAAqDC,cAArD;AAPmC;AAQtC;;;EAXiCY,c","sourcesContent":["class RequiredNumberValidator extends InputValidator{\n\n    //in this constructor we have a second parameter (allowed to exist because inputVaidator has a 2nd optional parameter called options)\n    constructor(domElement, numbersToCheck){\n        \n        //super \"call\" the domElement constructor that is in InputValidator [constructor(domElement)]\n        super(domElement)\n        //remember *this* variable\n        this.numbersToCheck = numbersToCheck\n\n        console.log('RequiredNumberValidator()', domElement, numbersToCheck)\n    }\n\n    validate = () => {\n        console.log('RequiredNumberValidator.validate', this.$field);\n        \n        this.errors= [];\n\n        let ageInput = this.$field.value;\n\n        \n        let first = this.numbersToCheck[0]; //5\n        \n        let last = this.numbersToCheck[this.numbersToCheck.length - 1]; //10\n        \n        console.log (\"first is: \" + first)\n        console.log(\"input is: \" + ageInput)\n        console.log (\"last is: \" + last)\n\n        //default setting so error message will apply automatically\n        let found = false;\n\n       \n       if(ageInput > last){\n        console.log(ageInput + ' is TOO BIG to be between ' + first + ' and ' + last)\n        } else if(first > ageInput){\n            console.log(ageInput + ' is TOO SMALL to be between ' + first + ' and ' + last)\n        }else{\n           found = true;\n           this.errors.push('you good, bro.' ); \n           console.log(ageInput + ' is between ' + first + ' and ' + last)\n       }\n        \n        if(found == false){\n            //add this message to the this.errors array (see InpuValidator)\n            this.errors.push('A legal age is required.' ); \n       }\n\n    }\n}\n\n\n\n"],"file":"req-num-validator.js"}